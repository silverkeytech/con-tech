//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.10.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using ConTech.Data.HelperClasses;
using ConTech.Data.FactoryClasses;
using ConTech.Data.RelationClasses;

using SD.LLBLGen.Pro.ORMSupportClasses;

namespace ConTech.Data.EntityClasses
{
	// __LLBLGENPRO_USER_CODE_REGION_START AdditionalNamespaces
	// __LLBLGENPRO_USER_CODE_REGION_END

	/// <summary>Entity class which represents the entity 'LevelChild'.<br/><br/></summary>
	[Serializable]
	public partial class LevelChildEntity : CommonEntityBase
		// __LLBLGENPRO_USER_CODE_REGION_START AdditionalInterfaces
		// __LLBLGENPRO_USER_CODE_REGION_END
	
	{
		private EntityCollection<LevelChildEntity> _levelChildren;
		private LevelChildEntity _levelChild;
		private UserEntity _user;
		private UserEntity _user1;
		private ViewLevelEntity _viewLevel;
		// __LLBLGENPRO_USER_CODE_REGION_START PrivateMembers
		// __LLBLGENPRO_USER_CODE_REGION_END

		private static LevelChildEntityStaticMetaData _staticMetaData = new LevelChildEntityStaticMetaData();
		private static LevelChildRelations _relationsFactory = new LevelChildRelations();

		/// <summary>All names of fields mapped onto a relation. Usable for in-memory filtering</summary>
		public static partial class MemberNames
		{
			/// <summary>Member name LevelChild</summary>
			public static readonly string LevelChild = "LevelChild";
			/// <summary>Member name User</summary>
			public static readonly string User = "User";
			/// <summary>Member name User1</summary>
			public static readonly string User1 = "User1";
			/// <summary>Member name ViewLevel</summary>
			public static readonly string ViewLevel = "ViewLevel";
			/// <summary>Member name LevelChildren</summary>
			public static readonly string LevelChildren = "LevelChildren";
		}

		/// <summary>Static meta-data storage for navigator related information</summary>
		protected class LevelChildEntityStaticMetaData : EntityStaticMetaDataBase
		{
			public LevelChildEntityStaticMetaData()
			{
				SetEntityCoreInfo("LevelChildEntity", InheritanceHierarchyType.None, false, (int)ConTech.Data.EntityType.LevelChildEntity, typeof(LevelChildEntity), typeof(LevelChildEntityFactory), false);
				AddNavigatorMetaData<LevelChildEntity, EntityCollection<LevelChildEntity>>("LevelChildren", a => a._levelChildren, (a, b) => a._levelChildren = b, a => a.LevelChildren, () => new LevelChildRelations().LevelChildEntityUsingParentId, typeof(LevelChildEntity), (int)ConTech.Data.EntityType.LevelChildEntity);
				AddNavigatorMetaData<LevelChildEntity, LevelChildEntity>("LevelChild", "LevelChildren", (a, b) => a._levelChild = b, a => a._levelChild, (a, b) => a.LevelChild = b, ConTech.Data.RelationClasses.StaticLevelChildRelations.LevelChildEntityUsingIdParentIdStatic, ()=>new LevelChildRelations().LevelChildEntityUsingIdParentId, null, new int[] { (int)LevelChildFieldIndex.ParentId }, null, true, (int)ConTech.Data.EntityType.LevelChildEntity);
				AddNavigatorMetaData<LevelChildEntity, UserEntity>("User", "LevelChildren", (a, b) => a._user = b, a => a._user, (a, b) => a.User = b, ConTech.Data.RelationClasses.StaticLevelChildRelations.UserEntityUsingCreatedByUserIdStatic, ()=>new LevelChildRelations().UserEntityUsingCreatedByUserId, null, new int[] { (int)LevelChildFieldIndex.CreatedByUserId }, null, true, (int)ConTech.Data.EntityType.UserEntity);
				AddNavigatorMetaData<LevelChildEntity, UserEntity>("User1", "LevelChildren1", (a, b) => a._user1 = b, a => a._user1, (a, b) => a.User1 = b, ConTech.Data.RelationClasses.StaticLevelChildRelations.UserEntityUsingLastModifiedByUserIdStatic, ()=>new LevelChildRelations().UserEntityUsingLastModifiedByUserId, null, new int[] { (int)LevelChildFieldIndex.LastModifiedByUserId }, null, true, (int)ConTech.Data.EntityType.UserEntity);
				AddNavigatorMetaData<LevelChildEntity, ViewLevelEntity>("ViewLevel", "LevelChildren", (a, b) => a._viewLevel = b, a => a._viewLevel, (a, b) => a.ViewLevel = b, ConTech.Data.RelationClasses.StaticLevelChildRelations.ViewLevelEntityUsingLevelIdStatic, ()=>new LevelChildRelations().ViewLevelEntityUsingLevelId, null, new int[] { (int)LevelChildFieldIndex.LevelId }, null, true, (int)ConTech.Data.EntityType.ViewLevelEntity);
			}
		}

		/// <summary>Static ctor</summary>
		static LevelChildEntity()
		{
		}

		/// <summary> CTor</summary>
		public LevelChildEntity()
		{
			InitClassEmpty(null, null);
		}

		/// <summary> CTor</summary>
		/// <param name="fields">Fields object to set as the fields for this entity.</param>
		public LevelChildEntity(IEntityFields2 fields)
		{
			InitClassEmpty(null, fields);
		}

		/// <summary> CTor</summary>
		/// <param name="validator">The custom validator object for this LevelChildEntity</param>
		public LevelChildEntity(IValidator validator)
		{
			InitClassEmpty(validator, null);
		}

		/// <summary> CTor</summary>
		/// <param name="id">PK value for LevelChild which data should be fetched into this LevelChild object</param>
		public LevelChildEntity(System.Guid id) : this(id, null)
		{
		}

		/// <summary> CTor</summary>
		/// <param name="id">PK value for LevelChild which data should be fetched into this LevelChild object</param>
		/// <param name="validator">The custom validator object for this LevelChildEntity</param>
		public LevelChildEntity(System.Guid id, IValidator validator)
		{
			InitClassEmpty(validator, null);
			this.Id = id;
		}

		/// <summary>Private CTor for deserialization</summary>
		/// <param name="info"></param>
		/// <param name="context"></param>
		protected LevelChildEntity(SerializationInfo info, StreamingContext context) : base(info, context)
		{
			// __LLBLGENPRO_USER_CODE_REGION_START DeserializationConstructor
			// __LLBLGENPRO_USER_CODE_REGION_END
		}

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'LevelChild' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLevelChildren() { return CreateRelationInfoForNavigator("LevelChildren"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'LevelChild' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLevelChild() { return CreateRelationInfoForNavigator("LevelChild"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'User' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoUser() { return CreateRelationInfoForNavigator("User"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'User' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoUser1() { return CreateRelationInfoForNavigator("User1"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'ViewLevel' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoViewLevel() { return CreateRelationInfoForNavigator("ViewLevel"); }
		
		/// <inheritdoc/>
		protected override EntityStaticMetaDataBase GetEntityStaticMetaData() {	return _staticMetaData; }

		/// <summary>Initializes the class members</summary>
		private void InitClassMembers()
		{
			PerformDependencyInjection();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassMembers
			// __LLBLGENPRO_USER_CODE_REGION_END

			OnInitClassMembersComplete();
		}

		/// <summary>Initializes the class with empty data, as if it is a new Entity.</summary>
		/// <param name="validator">The validator object for this LevelChildEntity</param>
		/// <param name="fields">Fields of this entity</param>
		private void InitClassEmpty(IValidator validator, IEntityFields2 fields)
		{
			OnInitializing();
			this.Fields = fields ?? CreateFields();
			this.Validator = validator;
			InitClassMembers();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassEmpty
			// __LLBLGENPRO_USER_CODE_REGION_END


			OnInitialized();
		}

		/// <summary>The relations object holding all relations of this entity with other entity classes.</summary>
		public static LevelChildRelations Relations { get { return _relationsFactory; } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'LevelChild' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLevelChildren { get { return _staticMetaData.GetPrefetchPathElement("LevelChildren", CommonEntityBase.CreateEntityCollection<LevelChildEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'LevelChild' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLevelChild { get { return _staticMetaData.GetPrefetchPathElement("LevelChild", CommonEntityBase.CreateEntityCollection<LevelChildEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'User' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathUser { get { return _staticMetaData.GetPrefetchPathElement("User", CommonEntityBase.CreateEntityCollection<UserEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'User' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathUser1 { get { return _staticMetaData.GetPrefetchPathElement("User1", CommonEntityBase.CreateEntityCollection<UserEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ViewLevel' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathViewLevel { get { return _staticMetaData.GetPrefetchPathElement("ViewLevel", CommonEntityBase.CreateEntityCollection<ViewLevelEntity>()); } }

		/// <summary>The CreatedByUserId property of the Entity LevelChild<br/><br/></summary>
		/// <remarks>Mapped on  table field: "LevelChild"."CreatedByUserId".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Int32> CreatedByUserId
		{
			get { return (Nullable<System.Int32>)GetValue((int)LevelChildFieldIndex.CreatedByUserId, false); }
			set	{ SetValue((int)LevelChildFieldIndex.CreatedByUserId, value); }
		}

		/// <summary>The DateCreatedUtc property of the Entity LevelChild<br/><br/></summary>
		/// <remarks>Mapped on  table field: "LevelChild"."DateCreatedUtc".<br/>Table field type characteristics (type, precision, scale, length): DateTime, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.DateTime DateCreatedUtc
		{
			get { return (System.DateTime)GetValue((int)LevelChildFieldIndex.DateCreatedUtc, true); }
			set	{ SetValue((int)LevelChildFieldIndex.DateCreatedUtc, value); }
		}

		/// <summary>The Description property of the Entity LevelChild<br/><br/></summary>
		/// <remarks>Mapped on  table field: "LevelChild"."Description".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 750.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String Description
		{
			get { return (System.String)GetValue((int)LevelChildFieldIndex.Description, true); }
			set	{ SetValue((int)LevelChildFieldIndex.Description, value); }
		}

		/// <summary>The EntityList property of the Entity LevelChild<br/><br/></summary>
		/// <remarks>Mapped on  table field: "LevelChild"."EntityList".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 2147483647.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String EntityList
		{
			get { return (System.String)GetValue((int)LevelChildFieldIndex.EntityList, true); }
			set	{ SetValue((int)LevelChildFieldIndex.EntityList, value); }
		}

		/// <summary>The Id property of the Entity LevelChild<br/><br/></summary>
		/// <remarks>Mapped on  table field: "LevelChild"."Id".<br/>Table field type characteristics (type, precision, scale, length): UniqueIdentifier, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, true, false</remarks>
		public virtual System.Guid Id
		{
			get { return (System.Guid)GetValue((int)LevelChildFieldIndex.Id, true); }
			set	{ SetValue((int)LevelChildFieldIndex.Id, value); }
		}

		/// <summary>The LastModifiedByUserId property of the Entity LevelChild<br/><br/></summary>
		/// <remarks>Mapped on  table field: "LevelChild"."LastModifiedByUserId".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Int32> LastModifiedByUserId
		{
			get { return (Nullable<System.Int32>)GetValue((int)LevelChildFieldIndex.LastModifiedByUserId, false); }
			set	{ SetValue((int)LevelChildFieldIndex.LastModifiedByUserId, value); }
		}

		/// <summary>The LastModifiedUtc property of the Entity LevelChild<br/><br/></summary>
		/// <remarks>Mapped on  table field: "LevelChild"."LastModifiedUtc".<br/>Table field type characteristics (type, precision, scale, length): DateTime, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.DateTime> LastModifiedUtc
		{
			get { return (Nullable<System.DateTime>)GetValue((int)LevelChildFieldIndex.LastModifiedUtc, false); }
			set	{ SetValue((int)LevelChildFieldIndex.LastModifiedUtc, value); }
		}

		/// <summary>The LevelId property of the Entity LevelChild<br/><br/></summary>
		/// <remarks>Mapped on  table field: "LevelChild"."LevelId".<br/>Table field type characteristics (type, precision, scale, length): UniqueIdentifier, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Guid LevelId
		{
			get { return (System.Guid)GetValue((int)LevelChildFieldIndex.LevelId, true); }
			set	{ SetValue((int)LevelChildFieldIndex.LevelId, value); }
		}

		/// <summary>The Name property of the Entity LevelChild<br/><br/></summary>
		/// <remarks>Mapped on  table field: "LevelChild"."Name".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 200.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.String Name
		{
			get { return (System.String)GetValue((int)LevelChildFieldIndex.Name, true); }
			set	{ SetValue((int)LevelChildFieldIndex.Name, value); }
		}

		/// <summary>The ObjectStatus property of the Entity LevelChild<br/><br/></summary>
		/// <remarks>Mapped on  table field: "LevelChild"."ObjectStatus".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Int32 ObjectStatus
		{
			get { return (System.Int32)GetValue((int)LevelChildFieldIndex.ObjectStatus, true); }
			set	{ SetValue((int)LevelChildFieldIndex.ObjectStatus, value); }
		}

		/// <summary>The ParentId property of the Entity LevelChild<br/><br/></summary>
		/// <remarks>Mapped on  table field: "LevelChild"."ParentId".<br/>Table field type characteristics (type, precision, scale, length): UniqueIdentifier, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Guid ParentId
		{
			get { return (System.Guid)GetValue((int)LevelChildFieldIndex.ParentId, true); }
			set	{ SetValue((int)LevelChildFieldIndex.ParentId, value); }
		}

		/// <summary>Gets the EntityCollection with the related entities of type 'LevelChildEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(LevelChildEntity))]
		public virtual EntityCollection<LevelChildEntity> LevelChildren { get { return GetOrCreateEntityCollection<LevelChildEntity, LevelChildEntityFactory>("LevelChild", true, false, ref _levelChildren); } }

		/// <summary>Gets / sets related entity of type 'LevelChildEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual LevelChildEntity LevelChild
		{
			get { return _levelChild; }
			set { SetSingleRelatedEntityNavigator(value, "LevelChild"); }
		}

		/// <summary>Gets / sets related entity of type 'UserEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual UserEntity User
		{
			get { return _user; }
			set { SetSingleRelatedEntityNavigator(value, "User"); }
		}

		/// <summary>Gets / sets related entity of type 'UserEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual UserEntity User1
		{
			get { return _user1; }
			set { SetSingleRelatedEntityNavigator(value, "User1"); }
		}

		/// <summary>Gets / sets related entity of type 'ViewLevelEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual ViewLevelEntity ViewLevel
		{
			get { return _viewLevel; }
			set { SetSingleRelatedEntityNavigator(value, "ViewLevel"); }
		}
		// __LLBLGENPRO_USER_CODE_REGION_START CustomEntityCode
		// __LLBLGENPRO_USER_CODE_REGION_END


	}
}

namespace ConTech.Data
{
	public enum LevelChildFieldIndex
	{
		///<summary>CreatedByUserId. </summary>
		CreatedByUserId,
		///<summary>DateCreatedUtc. </summary>
		DateCreatedUtc,
		///<summary>Description. </summary>
		Description,
		///<summary>EntityList. </summary>
		EntityList,
		///<summary>Id. </summary>
		Id,
		///<summary>LastModifiedByUserId. </summary>
		LastModifiedByUserId,
		///<summary>LastModifiedUtc. </summary>
		LastModifiedUtc,
		///<summary>LevelId. </summary>
		LevelId,
		///<summary>Name. </summary>
		Name,
		///<summary>ObjectStatus. </summary>
		ObjectStatus,
		///<summary>ParentId. </summary>
		ParentId,
		/// <summary></summary>
		AmountOfFields
	}
}

namespace ConTech.Data.RelationClasses
{
	/// <summary>Implements the relations factory for the entity: LevelChild. </summary>
	public partial class LevelChildRelations: RelationFactory
	{
		/// <summary>Returns a new IEntityRelation object, between LevelChildEntity and LevelChildEntity over the 1:n relation they have, using the relation between the fields: LevelChild.Id - LevelChild.ParentId</summary>
		public virtual IEntityRelation LevelChildEntityUsingParentId
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "LevelChildren", true, new[] { LevelChildFields.Id, LevelChildFields.ParentId }); }
		}

		/// <summary>Returns a new IEntityRelation object, between LevelChildEntity and LevelChildEntity over the m:1 relation they have, using the relation between the fields: LevelChild.ParentId - LevelChild.Id</summary>
		public virtual IEntityRelation LevelChildEntityUsingIdParentId
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "LevelChild", false, new[] { LevelChildFields.Id, LevelChildFields.ParentId }); }
		}

		/// <summary>Returns a new IEntityRelation object, between LevelChildEntity and UserEntity over the m:1 relation they have, using the relation between the fields: LevelChild.CreatedByUserId - User.Id</summary>
		public virtual IEntityRelation UserEntityUsingCreatedByUserId
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "User", false, new[] { UserFields.Id, LevelChildFields.CreatedByUserId }); }
		}

		/// <summary>Returns a new IEntityRelation object, between LevelChildEntity and UserEntity over the m:1 relation they have, using the relation between the fields: LevelChild.LastModifiedByUserId - User.Id</summary>
		public virtual IEntityRelation UserEntityUsingLastModifiedByUserId
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "User1", false, new[] { UserFields.Id, LevelChildFields.LastModifiedByUserId }); }
		}

		/// <summary>Returns a new IEntityRelation object, between LevelChildEntity and ViewLevelEntity over the m:1 relation they have, using the relation between the fields: LevelChild.LevelId - ViewLevel.Id</summary>
		public virtual IEntityRelation ViewLevelEntityUsingLevelId
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "ViewLevel", false, new[] { ViewLevelFields.Id, LevelChildFields.LevelId }); }
		}

	}
	
	/// <summary>Static class which is used for providing relationship instances which are re-used internally for syncing</summary>
	internal static class StaticLevelChildRelations
	{
		internal static readonly IEntityRelation LevelChildEntityUsingParentIdStatic = new LevelChildRelations().LevelChildEntityUsingParentId;
		internal static readonly IEntityRelation LevelChildEntityUsingIdParentIdStatic = new LevelChildRelations().LevelChildEntityUsingIdParentId;
		internal static readonly IEntityRelation UserEntityUsingCreatedByUserIdStatic = new LevelChildRelations().UserEntityUsingCreatedByUserId;
		internal static readonly IEntityRelation UserEntityUsingLastModifiedByUserIdStatic = new LevelChildRelations().UserEntityUsingLastModifiedByUserId;
		internal static readonly IEntityRelation ViewLevelEntityUsingLevelIdStatic = new LevelChildRelations().ViewLevelEntityUsingLevelId;

		/// <summary>CTor</summary>
		static StaticLevelChildRelations() { }
	}
}
