//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.10.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using ConTech.Data.HelperClasses;
using ConTech.Data.FactoryClasses;
using ConTech.Data.RelationClasses;

using SD.LLBLGen.Pro.ORMSupportClasses;

namespace ConTech.Data.EntityClasses
{
	// __LLBLGENPRO_USER_CODE_REGION_START AdditionalNamespaces
	// __LLBLGENPRO_USER_CODE_REGION_END

	/// <summary>Entity class which represents the entity 'ViewLevel'.<br/><br/></summary>
	[Serializable]
	public partial class ViewLevelEntity : CommonEntityBase
		// __LLBLGENPRO_USER_CODE_REGION_START AdditionalInterfaces
		// __LLBLGENPRO_USER_CODE_REGION_END
	
	{
		private EntityCollection<LevelChildEntity> _levelChildren;
		private EntityCollection<LevelEntityEntity> _levelEntities;
		private ProjectViewEntity _projectView;
		private UserEntity _user;
		private UserEntity _user1;
		// __LLBLGENPRO_USER_CODE_REGION_START PrivateMembers
		// __LLBLGENPRO_USER_CODE_REGION_END

		private static ViewLevelEntityStaticMetaData _staticMetaData = new ViewLevelEntityStaticMetaData();
		private static ViewLevelRelations _relationsFactory = new ViewLevelRelations();

		/// <summary>All names of fields mapped onto a relation. Usable for in-memory filtering</summary>
		public static partial class MemberNames
		{
			/// <summary>Member name ProjectView</summary>
			public static readonly string ProjectView = "ProjectView";
			/// <summary>Member name User</summary>
			public static readonly string User = "User";
			/// <summary>Member name User1</summary>
			public static readonly string User1 = "User1";
			/// <summary>Member name LevelChildren</summary>
			public static readonly string LevelChildren = "LevelChildren";
			/// <summary>Member name LevelEntities</summary>
			public static readonly string LevelEntities = "LevelEntities";
		}

		/// <summary>Static meta-data storage for navigator related information</summary>
		protected class ViewLevelEntityStaticMetaData : EntityStaticMetaDataBase
		{
			public ViewLevelEntityStaticMetaData()
			{
				SetEntityCoreInfo("ViewLevelEntity", InheritanceHierarchyType.None, false, (int)ConTech.Data.EntityType.ViewLevelEntity, typeof(ViewLevelEntity), typeof(ViewLevelEntityFactory), false);
				AddNavigatorMetaData<ViewLevelEntity, EntityCollection<LevelChildEntity>>("LevelChildren", a => a._levelChildren, (a, b) => a._levelChildren = b, a => a.LevelChildren, () => new ViewLevelRelations().LevelChildEntityUsingLevelId, typeof(LevelChildEntity), (int)ConTech.Data.EntityType.LevelChildEntity);
				AddNavigatorMetaData<ViewLevelEntity, EntityCollection<LevelEntityEntity>>("LevelEntities", a => a._levelEntities, (a, b) => a._levelEntities = b, a => a.LevelEntities, () => new ViewLevelRelations().LevelEntityEntityUsingLevelId, typeof(LevelEntityEntity), (int)ConTech.Data.EntityType.LevelEntityEntity);
				AddNavigatorMetaData<ViewLevelEntity, ProjectViewEntity>("ProjectView", "ViewLevels", (a, b) => a._projectView = b, a => a._projectView, (a, b) => a.ProjectView = b, ConTech.Data.RelationClasses.StaticViewLevelRelations.ProjectViewEntityUsingViewIdStatic, ()=>new ViewLevelRelations().ProjectViewEntityUsingViewId, null, new int[] { (int)ViewLevelFieldIndex.ViewId }, null, true, (int)ConTech.Data.EntityType.ProjectViewEntity);
				AddNavigatorMetaData<ViewLevelEntity, UserEntity>("User", "ViewLevels", (a, b) => a._user = b, a => a._user, (a, b) => a.User = b, ConTech.Data.RelationClasses.StaticViewLevelRelations.UserEntityUsingCreatedByUserIdStatic, ()=>new ViewLevelRelations().UserEntityUsingCreatedByUserId, null, new int[] { (int)ViewLevelFieldIndex.CreatedByUserId }, null, true, (int)ConTech.Data.EntityType.UserEntity);
				AddNavigatorMetaData<ViewLevelEntity, UserEntity>("User1", "ViewLevels1", (a, b) => a._user1 = b, a => a._user1, (a, b) => a.User1 = b, ConTech.Data.RelationClasses.StaticViewLevelRelations.UserEntityUsingLastModifiedByUserIdStatic, ()=>new ViewLevelRelations().UserEntityUsingLastModifiedByUserId, null, new int[] { (int)ViewLevelFieldIndex.LastModifiedByUserId }, null, true, (int)ConTech.Data.EntityType.UserEntity);
			}
		}

		/// <summary>Static ctor</summary>
		static ViewLevelEntity()
		{
		}

		/// <summary> CTor</summary>
		public ViewLevelEntity()
		{
			InitClassEmpty(null, null);
		}

		/// <summary> CTor</summary>
		/// <param name="fields">Fields object to set as the fields for this entity.</param>
		public ViewLevelEntity(IEntityFields2 fields)
		{
			InitClassEmpty(null, fields);
		}

		/// <summary> CTor</summary>
		/// <param name="validator">The custom validator object for this ViewLevelEntity</param>
		public ViewLevelEntity(IValidator validator)
		{
			InitClassEmpty(validator, null);
		}

		/// <summary> CTor</summary>
		/// <param name="id">PK value for ViewLevel which data should be fetched into this ViewLevel object</param>
		public ViewLevelEntity(System.Guid id) : this(id, null)
		{
		}

		/// <summary> CTor</summary>
		/// <param name="id">PK value for ViewLevel which data should be fetched into this ViewLevel object</param>
		/// <param name="validator">The custom validator object for this ViewLevelEntity</param>
		public ViewLevelEntity(System.Guid id, IValidator validator)
		{
			InitClassEmpty(validator, null);
			this.Id = id;
		}

		/// <summary>Private CTor for deserialization</summary>
		/// <param name="info"></param>
		/// <param name="context"></param>
		protected ViewLevelEntity(SerializationInfo info, StreamingContext context) : base(info, context)
		{
			// __LLBLGENPRO_USER_CODE_REGION_START DeserializationConstructor
			// __LLBLGENPRO_USER_CODE_REGION_END
		}

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'LevelChild' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLevelChildren() { return CreateRelationInfoForNavigator("LevelChildren"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'LevelEntity' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLevelEntities() { return CreateRelationInfoForNavigator("LevelEntities"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'ProjectView' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoProjectView() { return CreateRelationInfoForNavigator("ProjectView"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'User' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoUser() { return CreateRelationInfoForNavigator("User"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'User' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoUser1() { return CreateRelationInfoForNavigator("User1"); }
		
		/// <inheritdoc/>
		protected override EntityStaticMetaDataBase GetEntityStaticMetaData() {	return _staticMetaData; }

		/// <summary>Initializes the class members</summary>
		private void InitClassMembers()
		{
			PerformDependencyInjection();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassMembers
			// __LLBLGENPRO_USER_CODE_REGION_END

			OnInitClassMembersComplete();
		}

		/// <summary>Initializes the class with empty data, as if it is a new Entity.</summary>
		/// <param name="validator">The validator object for this ViewLevelEntity</param>
		/// <param name="fields">Fields of this entity</param>
		private void InitClassEmpty(IValidator validator, IEntityFields2 fields)
		{
			OnInitializing();
			this.Fields = fields ?? CreateFields();
			this.Validator = validator;
			InitClassMembers();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassEmpty
			// __LLBLGENPRO_USER_CODE_REGION_END


			OnInitialized();
		}

		/// <summary>The relations object holding all relations of this entity with other entity classes.</summary>
		public static ViewLevelRelations Relations { get { return _relationsFactory; } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'LevelChild' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLevelChildren { get { return _staticMetaData.GetPrefetchPathElement("LevelChildren", CommonEntityBase.CreateEntityCollection<LevelChildEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'LevelEntity' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLevelEntities { get { return _staticMetaData.GetPrefetchPathElement("LevelEntities", CommonEntityBase.CreateEntityCollection<LevelEntityEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ProjectView' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathProjectView { get { return _staticMetaData.GetPrefetchPathElement("ProjectView", CommonEntityBase.CreateEntityCollection<ProjectViewEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'User' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathUser { get { return _staticMetaData.GetPrefetchPathElement("User", CommonEntityBase.CreateEntityCollection<UserEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'User' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathUser1 { get { return _staticMetaData.GetPrefetchPathElement("User1", CommonEntityBase.CreateEntityCollection<UserEntity>()); } }

		/// <summary>The CreatedByUserId property of the Entity ViewLevel<br/><br/></summary>
		/// <remarks>Mapped on  table field: "ViewLevel"."CreatedByUserId".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Int32> CreatedByUserId
		{
			get { return (Nullable<System.Int32>)GetValue((int)ViewLevelFieldIndex.CreatedByUserId, false); }
			set	{ SetValue((int)ViewLevelFieldIndex.CreatedByUserId, value); }
		}

		/// <summary>The DateCreatedUtc property of the Entity ViewLevel<br/><br/></summary>
		/// <remarks>Mapped on  table field: "ViewLevel"."DateCreatedUtc".<br/>Table field type characteristics (type, precision, scale, length): DateTime, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.DateTime DateCreatedUtc
		{
			get { return (System.DateTime)GetValue((int)ViewLevelFieldIndex.DateCreatedUtc, true); }
			set	{ SetValue((int)ViewLevelFieldIndex.DateCreatedUtc, value); }
		}

		/// <summary>The Description property of the Entity ViewLevel<br/><br/></summary>
		/// <remarks>Mapped on  table field: "ViewLevel"."Description".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 750.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String Description
		{
			get { return (System.String)GetValue((int)ViewLevelFieldIndex.Description, true); }
			set	{ SetValue((int)ViewLevelFieldIndex.Description, value); }
		}

		/// <summary>The DxfData property of the Entity ViewLevel<br/><br/></summary>
		/// <remarks>Mapped on  table field: "ViewLevel"."DxfData".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 2147483647.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String DxfData
		{
			get { return (System.String)GetValue((int)ViewLevelFieldIndex.DxfData, true); }
			set	{ SetValue((int)ViewLevelFieldIndex.DxfData, value); }
		}

		/// <summary>The EntityData property of the Entity ViewLevel<br/><br/></summary>
		/// <remarks>Mapped on  table field: "ViewLevel"."EntityData".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 2147483647.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String EntityData
		{
			get { return (System.String)GetValue((int)ViewLevelFieldIndex.EntityData, true); }
			set	{ SetValue((int)ViewLevelFieldIndex.EntityData, value); }
		}

		/// <summary>The Id property of the Entity ViewLevel<br/><br/></summary>
		/// <remarks>Mapped on  table field: "ViewLevel"."Id".<br/>Table field type characteristics (type, precision, scale, length): UniqueIdentifier, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, true, false</remarks>
		public virtual System.Guid Id
		{
			get { return (System.Guid)GetValue((int)ViewLevelFieldIndex.Id, true); }
			set	{ SetValue((int)ViewLevelFieldIndex.Id, value); }
		}

		/// <summary>The LastModifiedByUserId property of the Entity ViewLevel<br/><br/></summary>
		/// <remarks>Mapped on  table field: "ViewLevel"."LastModifiedByUserId".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Int32> LastModifiedByUserId
		{
			get { return (Nullable<System.Int32>)GetValue((int)ViewLevelFieldIndex.LastModifiedByUserId, false); }
			set	{ SetValue((int)ViewLevelFieldIndex.LastModifiedByUserId, value); }
		}

		/// <summary>The LastModifiedUtc property of the Entity ViewLevel<br/><br/></summary>
		/// <remarks>Mapped on  table field: "ViewLevel"."LastModifiedUtc".<br/>Table field type characteristics (type, precision, scale, length): DateTime, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.DateTime> LastModifiedUtc
		{
			get { return (Nullable<System.DateTime>)GetValue((int)ViewLevelFieldIndex.LastModifiedUtc, false); }
			set	{ SetValue((int)ViewLevelFieldIndex.LastModifiedUtc, value); }
		}

		/// <summary>The Name property of the Entity ViewLevel<br/><br/></summary>
		/// <remarks>Mapped on  table field: "ViewLevel"."Name".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 200.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.String Name
		{
			get { return (System.String)GetValue((int)ViewLevelFieldIndex.Name, true); }
			set	{ SetValue((int)ViewLevelFieldIndex.Name, value); }
		}

		/// <summary>The ObjectStatus property of the Entity ViewLevel<br/><br/></summary>
		/// <remarks>Mapped on  table field: "ViewLevel"."ObjectStatus".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Int32 ObjectStatus
		{
			get { return (System.Int32)GetValue((int)ViewLevelFieldIndex.ObjectStatus, true); }
			set	{ SetValue((int)ViewLevelFieldIndex.ObjectStatus, value); }
		}

		/// <summary>The Scale property of the Entity ViewLevel<br/><br/></summary>
		/// <remarks>Mapped on  table field: "ViewLevel"."Scale".<br/>Table field type characteristics (type, precision, scale, length): Real, 24, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Single> Scale
		{
			get { return (Nullable<System.Single>)GetValue((int)ViewLevelFieldIndex.Scale, false); }
			set	{ SetValue((int)ViewLevelFieldIndex.Scale, value); }
		}

		/// <summary>The TransitionX property of the Entity ViewLevel<br/><br/></summary>
		/// <remarks>Mapped on  table field: "ViewLevel"."TransitionX".<br/>Table field type characteristics (type, precision, scale, length): Real, 24, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Single> TransitionX
		{
			get { return (Nullable<System.Single>)GetValue((int)ViewLevelFieldIndex.TransitionX, false); }
			set	{ SetValue((int)ViewLevelFieldIndex.TransitionX, value); }
		}

		/// <summary>The TransitionY property of the Entity ViewLevel<br/><br/></summary>
		/// <remarks>Mapped on  table field: "ViewLevel"."TransitionY".<br/>Table field type characteristics (type, precision, scale, length): Real, 24, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Single> TransitionY
		{
			get { return (Nullable<System.Single>)GetValue((int)ViewLevelFieldIndex.TransitionY, false); }
			set	{ SetValue((int)ViewLevelFieldIndex.TransitionY, value); }
		}

		/// <summary>The ViewId property of the Entity ViewLevel<br/><br/></summary>
		/// <remarks>Mapped on  table field: "ViewLevel"."ViewId".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Int32 ViewId
		{
			get { return (System.Int32)GetValue((int)ViewLevelFieldIndex.ViewId, true); }
			set	{ SetValue((int)ViewLevelFieldIndex.ViewId, value); }
		}

		/// <summary>Gets the EntityCollection with the related entities of type 'LevelChildEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(LevelChildEntity))]
		public virtual EntityCollection<LevelChildEntity> LevelChildren { get { return GetOrCreateEntityCollection<LevelChildEntity, LevelChildEntityFactory>("ViewLevel", true, false, ref _levelChildren); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'LevelEntityEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(LevelEntityEntity))]
		public virtual EntityCollection<LevelEntityEntity> LevelEntities { get { return GetOrCreateEntityCollection<LevelEntityEntity, LevelEntityEntityFactory>("ViewLevel", true, false, ref _levelEntities); } }

		/// <summary>Gets / sets related entity of type 'ProjectViewEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual ProjectViewEntity ProjectView
		{
			get { return _projectView; }
			set { SetSingleRelatedEntityNavigator(value, "ProjectView"); }
		}

		/// <summary>Gets / sets related entity of type 'UserEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual UserEntity User
		{
			get { return _user; }
			set { SetSingleRelatedEntityNavigator(value, "User"); }
		}

		/// <summary>Gets / sets related entity of type 'UserEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual UserEntity User1
		{
			get { return _user1; }
			set { SetSingleRelatedEntityNavigator(value, "User1"); }
		}
		// __LLBLGENPRO_USER_CODE_REGION_START CustomEntityCode
		// __LLBLGENPRO_USER_CODE_REGION_END


	}
}

namespace ConTech.Data
{
	public enum ViewLevelFieldIndex
	{
		///<summary>CreatedByUserId. </summary>
		CreatedByUserId,
		///<summary>DateCreatedUtc. </summary>
		DateCreatedUtc,
		///<summary>Description. </summary>
		Description,
		///<summary>DxfData. </summary>
		DxfData,
		///<summary>EntityData. </summary>
		EntityData,
		///<summary>Id. </summary>
		Id,
		///<summary>LastModifiedByUserId. </summary>
		LastModifiedByUserId,
		///<summary>LastModifiedUtc. </summary>
		LastModifiedUtc,
		///<summary>Name. </summary>
		Name,
		///<summary>ObjectStatus. </summary>
		ObjectStatus,
		///<summary>Scale. </summary>
		Scale,
		///<summary>TransitionX. </summary>
		TransitionX,
		///<summary>TransitionY. </summary>
		TransitionY,
		///<summary>ViewId. </summary>
		ViewId,
		/// <summary></summary>
		AmountOfFields
	}
}

namespace ConTech.Data.RelationClasses
{
	/// <summary>Implements the relations factory for the entity: ViewLevel. </summary>
	public partial class ViewLevelRelations: RelationFactory
	{
		/// <summary>Returns a new IEntityRelation object, between ViewLevelEntity and LevelChildEntity over the 1:n relation they have, using the relation between the fields: ViewLevel.Id - LevelChild.LevelId</summary>
		public virtual IEntityRelation LevelChildEntityUsingLevelId
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "LevelChildren", true, new[] { ViewLevelFields.Id, LevelChildFields.LevelId }); }
		}

		/// <summary>Returns a new IEntityRelation object, between ViewLevelEntity and LevelEntityEntity over the 1:n relation they have, using the relation between the fields: ViewLevel.Id - LevelEntity.LevelId</summary>
		public virtual IEntityRelation LevelEntityEntityUsingLevelId
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "LevelEntities", true, new[] { ViewLevelFields.Id, LevelEntityFields.LevelId }); }
		}

		/// <summary>Returns a new IEntityRelation object, between ViewLevelEntity and ProjectViewEntity over the m:1 relation they have, using the relation between the fields: ViewLevel.ViewId - ProjectView.Id</summary>
		public virtual IEntityRelation ProjectViewEntityUsingViewId
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "ProjectView", false, new[] { ProjectViewFields.Id, ViewLevelFields.ViewId }); }
		}

		/// <summary>Returns a new IEntityRelation object, between ViewLevelEntity and UserEntity over the m:1 relation they have, using the relation between the fields: ViewLevel.CreatedByUserId - User.Id</summary>
		public virtual IEntityRelation UserEntityUsingCreatedByUserId
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "User", false, new[] { UserFields.Id, ViewLevelFields.CreatedByUserId }); }
		}

		/// <summary>Returns a new IEntityRelation object, between ViewLevelEntity and UserEntity over the m:1 relation they have, using the relation between the fields: ViewLevel.LastModifiedByUserId - User.Id</summary>
		public virtual IEntityRelation UserEntityUsingLastModifiedByUserId
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "User1", false, new[] { UserFields.Id, ViewLevelFields.LastModifiedByUserId }); }
		}

	}
	
	/// <summary>Static class which is used for providing relationship instances which are re-used internally for syncing</summary>
	internal static class StaticViewLevelRelations
	{
		internal static readonly IEntityRelation LevelChildEntityUsingLevelIdStatic = new ViewLevelRelations().LevelChildEntityUsingLevelId;
		internal static readonly IEntityRelation LevelEntityEntityUsingLevelIdStatic = new ViewLevelRelations().LevelEntityEntityUsingLevelId;
		internal static readonly IEntityRelation ProjectViewEntityUsingViewIdStatic = new ViewLevelRelations().ProjectViewEntityUsingViewId;
		internal static readonly IEntityRelation UserEntityUsingCreatedByUserIdStatic = new ViewLevelRelations().UserEntityUsingCreatedByUserId;
		internal static readonly IEntityRelation UserEntityUsingLastModifiedByUserIdStatic = new ViewLevelRelations().UserEntityUsingLastModifiedByUserId;

		/// <summary>CTor</summary>
		static StaticViewLevelRelations() { }
	}
}
