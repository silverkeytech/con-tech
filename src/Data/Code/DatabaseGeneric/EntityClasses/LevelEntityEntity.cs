//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.10.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using ConTech.Data.HelperClasses;
using ConTech.Data.FactoryClasses;
using ConTech.Data.RelationClasses;

using SD.LLBLGen.Pro.ORMSupportClasses;

namespace ConTech.Data.EntityClasses
{
	// __LLBLGENPRO_USER_CODE_REGION_START AdditionalNamespaces
	// __LLBLGENPRO_USER_CODE_REGION_END
	/// <summary>Entity class which represents the entity 'LevelEntity'.<br/><br/></summary>
	[Serializable]
	public partial class LevelEntityEntity : CommonEntityBase
		// __LLBLGENPRO_USER_CODE_REGION_START AdditionalInterfaces
		// __LLBLGENPRO_USER_CODE_REGION_END	
	{
		private EntityTypeEntity _entityType;
		private UserEntity _user;
		private UserEntity _user1;
		private ViewLevelEntity _viewLevel;

		// __LLBLGENPRO_USER_CODE_REGION_START PrivateMembers
		// __LLBLGENPRO_USER_CODE_REGION_END
		private static LevelEntityEntityStaticMetaData _staticMetaData = new LevelEntityEntityStaticMetaData();
		private static LevelEntityRelations _relationsFactory = new LevelEntityRelations();

		/// <summary>All names of fields mapped onto a relation. Usable for in-memory filtering</summary>
		public static partial class MemberNames
		{
			/// <summary>Member name EntityType</summary>
			public static readonly string EntityType = "EntityType";
			/// <summary>Member name User</summary>
			public static readonly string User = "User";
			/// <summary>Member name User1</summary>
			public static readonly string User1 = "User1";
			/// <summary>Member name ViewLevel</summary>
			public static readonly string ViewLevel = "ViewLevel";
		}

		/// <summary>Static meta-data storage for navigator related information</summary>
		protected class LevelEntityEntityStaticMetaData : EntityStaticMetaDataBase
		{
			public LevelEntityEntityStaticMetaData()
			{
				SetEntityCoreInfo("LevelEntityEntity", InheritanceHierarchyType.None, false, (int)ConTech.Data.EntityType.LevelEntityEntity, typeof(LevelEntityEntity), typeof(LevelEntityEntityFactory), false);
				AddNavigatorMetaData<LevelEntityEntity, EntityTypeEntity>("EntityType", "LevelEntities", (a, b) => a._entityType = b, a => a._entityType, (a, b) => a.EntityType = b, ConTech.Data.RelationClasses.StaticLevelEntityRelations.EntityTypeEntityUsingEntityTypeIdStatic, ()=>new LevelEntityRelations().EntityTypeEntityUsingEntityTypeId, null, new int[] { (int)LevelEntityFieldIndex.EntityTypeId }, null, true, (int)ConTech.Data.EntityType.EntityTypeEntity);
				AddNavigatorMetaData<LevelEntityEntity, UserEntity>("User", "LevelEntities", (a, b) => a._user = b, a => a._user, (a, b) => a.User = b, ConTech.Data.RelationClasses.StaticLevelEntityRelations.UserEntityUsingCreatedByUserIdStatic, ()=>new LevelEntityRelations().UserEntityUsingCreatedByUserId, null, new int[] { (int)LevelEntityFieldIndex.CreatedByUserId }, null, true, (int)ConTech.Data.EntityType.UserEntity);
				AddNavigatorMetaData<LevelEntityEntity, UserEntity>("User1", "LevelEntities1", (a, b) => a._user1 = b, a => a._user1, (a, b) => a.User1 = b, ConTech.Data.RelationClasses.StaticLevelEntityRelations.UserEntityUsingLastModifiedByUserIdStatic, ()=>new LevelEntityRelations().UserEntityUsingLastModifiedByUserId, null, new int[] { (int)LevelEntityFieldIndex.LastModifiedByUserId }, null, true, (int)ConTech.Data.EntityType.UserEntity);
				AddNavigatorMetaData<LevelEntityEntity, ViewLevelEntity>("ViewLevel", "LevelEntities", (a, b) => a._viewLevel = b, a => a._viewLevel, (a, b) => a.ViewLevel = b, ConTech.Data.RelationClasses.StaticLevelEntityRelations.ViewLevelEntityUsingLevelIdStatic, ()=>new LevelEntityRelations().ViewLevelEntityUsingLevelId, null, new int[] { (int)LevelEntityFieldIndex.LevelId }, null, true, (int)ConTech.Data.EntityType.ViewLevelEntity);
			}
		}

		/// <summary>Static ctor</summary>
		static LevelEntityEntity()
		{
		}

		/// <summary> CTor</summary>
		public LevelEntityEntity()
		{
			InitClassEmpty(null, null);
		}

		/// <summary> CTor</summary>
		/// <param name="fields">Fields object to set as the fields for this entity.</param>
		public LevelEntityEntity(IEntityFields2 fields)
		{
			InitClassEmpty(null, fields);
		}

		/// <summary> CTor</summary>
		/// <param name="validator">The custom validator object for this LevelEntityEntity</param>
		public LevelEntityEntity(IValidator validator)
		{
			InitClassEmpty(validator, null);
		}

		/// <summary> CTor</summary>
		/// <param name="id">PK value for LevelEntity which data should be fetched into this LevelEntity object</param>
		public LevelEntityEntity(System.Int32 id) : this(id, null)
		{
		}

		/// <summary> CTor</summary>
		/// <param name="id">PK value for LevelEntity which data should be fetched into this LevelEntity object</param>
		/// <param name="validator">The custom validator object for this LevelEntityEntity</param>
		public LevelEntityEntity(System.Int32 id, IValidator validator)
		{
			InitClassEmpty(validator, null);
			this.Id = id;
		}

		/// <summary>Private CTor for deserialization</summary>
		/// <param name="info"></param>
		/// <param name="context"></param>
		protected LevelEntityEntity(SerializationInfo info, StreamingContext context) : base(info, context)
		{
			// __LLBLGENPRO_USER_CODE_REGION_START DeserializationConstructor
			// __LLBLGENPRO_USER_CODE_REGION_END
		}

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'EntityType' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEntityType() { return CreateRelationInfoForNavigator("EntityType"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'User' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoUser() { return CreateRelationInfoForNavigator("User"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'User' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoUser1() { return CreateRelationInfoForNavigator("User1"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'ViewLevel' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoViewLevel() { return CreateRelationInfoForNavigator("ViewLevel"); }
		
		/// <inheritdoc/>
		protected override EntityStaticMetaDataBase GetEntityStaticMetaData() {	return _staticMetaData; }

		/// <summary>Initializes the class members</summary>
		private void InitClassMembers()
		{
			PerformDependencyInjection();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassMembers
			// __LLBLGENPRO_USER_CODE_REGION_END
			OnInitClassMembersComplete();
		}

		/// <summary>Initializes the class with empty data, as if it is a new Entity.</summary>
		/// <param name="validator">The validator object for this LevelEntityEntity</param>
		/// <param name="fields">Fields of this entity</param>
		private void InitClassEmpty(IValidator validator, IEntityFields2 fields)
		{
			OnInitializing();
			this.Fields = fields ?? CreateFields();
			this.Validator = validator;
			InitClassMembers();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassEmpty
			// __LLBLGENPRO_USER_CODE_REGION_END

			OnInitialized();
		}

		/// <summary>The relations object holding all relations of this entity with other entity classes.</summary>
		public static LevelEntityRelations Relations { get { return _relationsFactory; } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EntityType' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEntityType { get { return _staticMetaData.GetPrefetchPathElement("EntityType", CommonEntityBase.CreateEntityCollection<EntityTypeEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'User' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathUser { get { return _staticMetaData.GetPrefetchPathElement("User", CommonEntityBase.CreateEntityCollection<UserEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'User' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathUser1 { get { return _staticMetaData.GetPrefetchPathElement("User1", CommonEntityBase.CreateEntityCollection<UserEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ViewLevel' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathViewLevel { get { return _staticMetaData.GetPrefetchPathElement("ViewLevel", CommonEntityBase.CreateEntityCollection<ViewLevelEntity>()); } }

		/// <summary>The ColorCode property of the Entity LevelEntity<br/><br/></summary>
		/// <remarks>Mapped on  table field: "LevelEntity"."ColorCode".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 20.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String ColorCode
		{
			get { return (System.String)GetValue((int)LevelEntityFieldIndex.ColorCode, true); }
			set	{ SetValue((int)LevelEntityFieldIndex.ColorCode, value); }
		}

		/// <summary>The ColorIndex property of the Entity LevelEntity<br/><br/></summary>
		/// <remarks>Mapped on  table field: "LevelEntity"."ColorIndex".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Int32 ColorIndex
		{
			get { return (System.Int32)GetValue((int)LevelEntityFieldIndex.ColorIndex, true); }
			set	{ SetValue((int)LevelEntityFieldIndex.ColorIndex, value); }
		}

		/// <summary>The CreatedByUserId property of the Entity LevelEntity<br/><br/></summary>
		/// <remarks>Mapped on  table field: "LevelEntity"."CreatedByUserId".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Int32> CreatedByUserId
		{
			get { return (Nullable<System.Int32>)GetValue((int)LevelEntityFieldIndex.CreatedByUserId, false); }
			set	{ SetValue((int)LevelEntityFieldIndex.CreatedByUserId, value); }
		}

		/// <summary>The DateCreatedUtc property of the Entity LevelEntity<br/><br/></summary>
		/// <remarks>Mapped on  table field: "LevelEntity"."DateCreatedUtc".<br/>Table field type characteristics (type, precision, scale, length): DateTime, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.DateTime DateCreatedUtc
		{
			get { return (System.DateTime)GetValue((int)LevelEntityFieldIndex.DateCreatedUtc, true); }
			set	{ SetValue((int)LevelEntityFieldIndex.DateCreatedUtc, value); }
		}

		/// <summary>The EntityName property of the Entity LevelEntity<br/><br/></summary>
		/// <remarks>Mapped on  table field: "LevelEntity"."EntityName".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 200.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.String EntityName
		{
			get { return (System.String)GetValue((int)LevelEntityFieldIndex.EntityName, true); }
			set	{ SetValue((int)LevelEntityFieldIndex.EntityName, value); }
		}

		/// <summary>The EntityTypeId property of the Entity LevelEntity<br/><br/></summary>
		/// <remarks>Mapped on  table field: "LevelEntity"."EntityTypeId".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Int32 EntityTypeId
		{
			get { return (System.Int32)GetValue((int)LevelEntityFieldIndex.EntityTypeId, true); }
			set	{ SetValue((int)LevelEntityFieldIndex.EntityTypeId, value); }
		}

		/// <summary>The Frozen property of the Entity LevelEntity<br/><br/></summary>
		/// <remarks>Mapped on  table field: "LevelEntity"."Frozen".<br/>Table field type characteristics (type, precision, scale, length): Bit, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Boolean Frozen
		{
			get { return (System.Boolean)GetValue((int)LevelEntityFieldIndex.Frozen, true); }
			set	{ SetValue((int)LevelEntityFieldIndex.Frozen, value); }
		}

		/// <summary>The Id property of the Entity LevelEntity<br/><br/></summary>
		/// <remarks>Mapped on  table field: "LevelEntity"."Id".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, true, true</remarks>
		public virtual System.Int32 Id
		{
			get { return (System.Int32)GetValue((int)LevelEntityFieldIndex.Id, true); }
			set { SetValue((int)LevelEntityFieldIndex.Id, value); }		}

		/// <summary>The LastModifiedByUserId property of the Entity LevelEntity<br/><br/></summary>
		/// <remarks>Mapped on  table field: "LevelEntity"."LastModifiedByUserId".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Int32> LastModifiedByUserId
		{
			get { return (Nullable<System.Int32>)GetValue((int)LevelEntityFieldIndex.LastModifiedByUserId, false); }
			set	{ SetValue((int)LevelEntityFieldIndex.LastModifiedByUserId, value); }
		}

		/// <summary>The LastModifiedUtc property of the Entity LevelEntity<br/><br/></summary>
		/// <remarks>Mapped on  table field: "LevelEntity"."LastModifiedUtc".<br/>Table field type characteristics (type, precision, scale, length): DateTime, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.DateTime> LastModifiedUtc
		{
			get { return (Nullable<System.DateTime>)GetValue((int)LevelEntityFieldIndex.LastModifiedUtc, false); }
			set	{ SetValue((int)LevelEntityFieldIndex.LastModifiedUtc, value); }
		}

		/// <summary>The LevelId property of the Entity LevelEntity<br/><br/></summary>
		/// <remarks>Mapped on  table field: "LevelEntity"."LevelId".<br/>Table field type characteristics (type, precision, scale, length): UniqueIdentifier, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Guid LevelId
		{
			get { return (System.Guid)GetValue((int)LevelEntityFieldIndex.LevelId, true); }
			set	{ SetValue((int)LevelEntityFieldIndex.LevelId, value); }
		}

		/// <summary>The ObjectStatus property of the Entity LevelEntity<br/><br/></summary>
		/// <remarks>Mapped on  table field: "LevelEntity"."ObjectStatus".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Int32 ObjectStatus
		{
			get { return (System.Int32)GetValue((int)LevelEntityFieldIndex.ObjectStatus, true); }
			set	{ SetValue((int)LevelEntityFieldIndex.ObjectStatus, value); }
		}

		/// <summary>The UniqueId property of the Entity LevelEntity<br/><br/></summary>
		/// <remarks>Mapped on  table field: "LevelEntity"."UniqueId".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 750.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String UniqueId
		{
			get { return (System.String)GetValue((int)LevelEntityFieldIndex.UniqueId, true); }
			set	{ SetValue((int)LevelEntityFieldIndex.UniqueId, value); }
		}

		/// <summary>The Vertices property of the Entity LevelEntity<br/><br/></summary>
		/// <remarks>Mapped on  table field: "LevelEntity"."Vertices".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 1000.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String Vertices
		{
			get { return (System.String)GetValue((int)LevelEntityFieldIndex.Vertices, true); }
			set	{ SetValue((int)LevelEntityFieldIndex.Vertices, value); }
		}

		/// <summary>The Visible property of the Entity LevelEntity<br/><br/></summary>
		/// <remarks>Mapped on  table field: "LevelEntity"."Visible".<br/>Table field type characteristics (type, precision, scale, length): Bit, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Boolean Visible
		{
			get { return (System.Boolean)GetValue((int)LevelEntityFieldIndex.Visible, true); }
			set	{ SetValue((int)LevelEntityFieldIndex.Visible, value); }
		}

		/// <summary>Gets / sets related entity of type 'EntityTypeEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual EntityTypeEntity EntityType
		{
			get { return _entityType; }
			set { SetSingleRelatedEntityNavigator(value, "EntityType"); }
		}

		/// <summary>Gets / sets related entity of type 'UserEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual UserEntity User
		{
			get { return _user; }
			set { SetSingleRelatedEntityNavigator(value, "User"); }
		}

		/// <summary>Gets / sets related entity of type 'UserEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual UserEntity User1
		{
			get { return _user1; }
			set { SetSingleRelatedEntityNavigator(value, "User1"); }
		}

		/// <summary>Gets / sets related entity of type 'ViewLevelEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual ViewLevelEntity ViewLevel
		{
			get { return _viewLevel; }
			set { SetSingleRelatedEntityNavigator(value, "ViewLevel"); }
		}

		// __LLBLGENPRO_USER_CODE_REGION_START CustomEntityCode
		// __LLBLGENPRO_USER_CODE_REGION_END

	}
}

namespace ConTech.Data
{
	public enum LevelEntityFieldIndex
	{
		///<summary>ColorCode. </summary>
		ColorCode,
		///<summary>ColorIndex. </summary>
		ColorIndex,
		///<summary>CreatedByUserId. </summary>
		CreatedByUserId,
		///<summary>DateCreatedUtc. </summary>
		DateCreatedUtc,
		///<summary>EntityName. </summary>
		EntityName,
		///<summary>EntityTypeId. </summary>
		EntityTypeId,
		///<summary>Frozen. </summary>
		Frozen,
		///<summary>Id. </summary>
		Id,
		///<summary>LastModifiedByUserId. </summary>
		LastModifiedByUserId,
		///<summary>LastModifiedUtc. </summary>
		LastModifiedUtc,
		///<summary>LevelId. </summary>
		LevelId,
		///<summary>ObjectStatus. </summary>
		ObjectStatus,
		///<summary>UniqueId. </summary>
		UniqueId,
		///<summary>Vertices. </summary>
		Vertices,
		///<summary>Visible. </summary>
		Visible,
		/// <summary></summary>
		AmountOfFields
	}
}

namespace ConTech.Data.RelationClasses
{
	/// <summary>Implements the relations factory for the entity: LevelEntity. </summary>
	public partial class LevelEntityRelations: RelationFactory
	{

		/// <summary>Returns a new IEntityRelation object, between LevelEntityEntity and EntityTypeEntity over the m:1 relation they have, using the relation between the fields: LevelEntity.EntityTypeId - EntityType.Id</summary>
		public virtual IEntityRelation EntityTypeEntityUsingEntityTypeId
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "EntityType", false, new[] { EntityTypeFields.Id, LevelEntityFields.EntityTypeId }); }
		}

		/// <summary>Returns a new IEntityRelation object, between LevelEntityEntity and UserEntity over the m:1 relation they have, using the relation between the fields: LevelEntity.CreatedByUserId - User.Id</summary>
		public virtual IEntityRelation UserEntityUsingCreatedByUserId
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "User", false, new[] { UserFields.Id, LevelEntityFields.CreatedByUserId }); }
		}

		/// <summary>Returns a new IEntityRelation object, between LevelEntityEntity and UserEntity over the m:1 relation they have, using the relation between the fields: LevelEntity.LastModifiedByUserId - User.Id</summary>
		public virtual IEntityRelation UserEntityUsingLastModifiedByUserId
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "User1", false, new[] { UserFields.Id, LevelEntityFields.LastModifiedByUserId }); }
		}

		/// <summary>Returns a new IEntityRelation object, between LevelEntityEntity and ViewLevelEntity over the m:1 relation they have, using the relation between the fields: LevelEntity.LevelId - ViewLevel.Id</summary>
		public virtual IEntityRelation ViewLevelEntityUsingLevelId
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "ViewLevel", false, new[] { ViewLevelFields.Id, LevelEntityFields.LevelId }); }
		}

	}
	
	/// <summary>Static class which is used for providing relationship instances which are re-used internally for syncing</summary>
	internal static class StaticLevelEntityRelations
	{
		internal static readonly IEntityRelation EntityTypeEntityUsingEntityTypeIdStatic = new LevelEntityRelations().EntityTypeEntityUsingEntityTypeId;
		internal static readonly IEntityRelation UserEntityUsingCreatedByUserIdStatic = new LevelEntityRelations().UserEntityUsingCreatedByUserId;
		internal static readonly IEntityRelation UserEntityUsingLastModifiedByUserIdStatic = new LevelEntityRelations().UserEntityUsingLastModifiedByUserId;
		internal static readonly IEntityRelation ViewLevelEntityUsingLevelIdStatic = new LevelEntityRelations().ViewLevelEntityUsingLevelId;

		/// <summary>CTor</summary>
		static StaticLevelEntityRelations() { }
	}
}
