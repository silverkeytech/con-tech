//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.10.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using ConTech.Data.HelperClasses;
using ConTech.Data.FactoryClasses;
using ConTech.Data.RelationClasses;

using SD.LLBLGen.Pro.ORMSupportClasses;

namespace ConTech.Data.EntityClasses
{
	// __LLBLGENPRO_USER_CODE_REGION_START AdditionalNamespaces
	// __LLBLGENPRO_USER_CODE_REGION_END
	/// <summary>Entity class which represents the entity 'EntityType'.<br/><br/></summary>
	[Serializable]
	public partial class EntityTypeEntity : CommonEntityBase
		// __LLBLGENPRO_USER_CODE_REGION_START AdditionalInterfaces
		// __LLBLGENPRO_USER_CODE_REGION_END	
	{
		private EntityCollection<LevelEntityEntity> _levelEntities;
		private UserEntity _user;
		private UserEntity _user1;

		// __LLBLGENPRO_USER_CODE_REGION_START PrivateMembers
		// __LLBLGENPRO_USER_CODE_REGION_END
		private static EntityTypeEntityStaticMetaData _staticMetaData = new EntityTypeEntityStaticMetaData();
		private static EntityTypeRelations _relationsFactory = new EntityTypeRelations();

		/// <summary>All names of fields mapped onto a relation. Usable for in-memory filtering</summary>
		public static partial class MemberNames
		{
			/// <summary>Member name User</summary>
			public static readonly string User = "User";
			/// <summary>Member name User1</summary>
			public static readonly string User1 = "User1";
			/// <summary>Member name LevelEntities</summary>
			public static readonly string LevelEntities = "LevelEntities";
		}

		/// <summary>Static meta-data storage for navigator related information</summary>
		protected class EntityTypeEntityStaticMetaData : EntityStaticMetaDataBase
		{
			public EntityTypeEntityStaticMetaData()
			{
				SetEntityCoreInfo("EntityTypeEntity", InheritanceHierarchyType.None, false, (int)ConTech.Data.EntityType.EntityTypeEntity, typeof(EntityTypeEntity), typeof(EntityTypeEntityFactory), false);
				AddNavigatorMetaData<EntityTypeEntity, EntityCollection<LevelEntityEntity>>("LevelEntities", a => a._levelEntities, (a, b) => a._levelEntities = b, a => a.LevelEntities, () => new EntityTypeRelations().LevelEntityEntityUsingEntityTypeId, typeof(LevelEntityEntity), (int)ConTech.Data.EntityType.LevelEntityEntity);
				AddNavigatorMetaData<EntityTypeEntity, UserEntity>("User", "EntityTypes", (a, b) => a._user = b, a => a._user, (a, b) => a.User = b, ConTech.Data.RelationClasses.StaticEntityTypeRelations.UserEntityUsingCreatedByUserIdStatic, ()=>new EntityTypeRelations().UserEntityUsingCreatedByUserId, null, new int[] { (int)EntityTypeFieldIndex.CreatedByUserId }, null, true, (int)ConTech.Data.EntityType.UserEntity);
				AddNavigatorMetaData<EntityTypeEntity, UserEntity>("User1", "EntityTypes1", (a, b) => a._user1 = b, a => a._user1, (a, b) => a.User1 = b, ConTech.Data.RelationClasses.StaticEntityTypeRelations.UserEntityUsingLastModifiedByUserIdStatic, ()=>new EntityTypeRelations().UserEntityUsingLastModifiedByUserId, null, new int[] { (int)EntityTypeFieldIndex.LastModifiedByUserId }, null, true, (int)ConTech.Data.EntityType.UserEntity);
			}
		}

		/// <summary>Static ctor</summary>
		static EntityTypeEntity()
		{
		}

		/// <summary> CTor</summary>
		public EntityTypeEntity()
		{
			InitClassEmpty(null, null);
		}

		/// <summary> CTor</summary>
		/// <param name="fields">Fields object to set as the fields for this entity.</param>
		public EntityTypeEntity(IEntityFields2 fields)
		{
			InitClassEmpty(null, fields);
		}

		/// <summary> CTor</summary>
		/// <param name="validator">The custom validator object for this EntityTypeEntity</param>
		public EntityTypeEntity(IValidator validator)
		{
			InitClassEmpty(validator, null);
		}

		/// <summary> CTor</summary>
		/// <param name="id">PK value for EntityType which data should be fetched into this EntityType object</param>
		public EntityTypeEntity(System.Int32 id) : this(id, null)
		{
		}

		/// <summary> CTor</summary>
		/// <param name="id">PK value for EntityType which data should be fetched into this EntityType object</param>
		/// <param name="validator">The custom validator object for this EntityTypeEntity</param>
		public EntityTypeEntity(System.Int32 id, IValidator validator)
		{
			InitClassEmpty(validator, null);
			this.Id = id;
		}

		/// <summary>Private CTor for deserialization</summary>
		/// <param name="info"></param>
		/// <param name="context"></param>
		protected EntityTypeEntity(SerializationInfo info, StreamingContext context) : base(info, context)
		{
			// __LLBLGENPRO_USER_CODE_REGION_START DeserializationConstructor
			// __LLBLGENPRO_USER_CODE_REGION_END
		}

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'LevelEntity' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLevelEntities() { return CreateRelationInfoForNavigator("LevelEntities"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'User' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoUser() { return CreateRelationInfoForNavigator("User"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'User' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoUser1() { return CreateRelationInfoForNavigator("User1"); }
		
		/// <inheritdoc/>
		protected override EntityStaticMetaDataBase GetEntityStaticMetaData() {	return _staticMetaData; }

		/// <summary>Initializes the class members</summary>
		private void InitClassMembers()
		{
			PerformDependencyInjection();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassMembers
			// __LLBLGENPRO_USER_CODE_REGION_END
			OnInitClassMembersComplete();
		}

		/// <summary>Initializes the class with empty data, as if it is a new Entity.</summary>
		/// <param name="validator">The validator object for this EntityTypeEntity</param>
		/// <param name="fields">Fields of this entity</param>
		private void InitClassEmpty(IValidator validator, IEntityFields2 fields)
		{
			OnInitializing();
			this.Fields = fields ?? CreateFields();
			this.Validator = validator;
			InitClassMembers();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassEmpty
			// __LLBLGENPRO_USER_CODE_REGION_END

			OnInitialized();
		}

		/// <summary>The relations object holding all relations of this entity with other entity classes.</summary>
		public static EntityTypeRelations Relations { get { return _relationsFactory; } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'LevelEntity' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLevelEntities { get { return _staticMetaData.GetPrefetchPathElement("LevelEntities", CommonEntityBase.CreateEntityCollection<LevelEntityEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'User' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathUser { get { return _staticMetaData.GetPrefetchPathElement("User", CommonEntityBase.CreateEntityCollection<UserEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'User' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathUser1 { get { return _staticMetaData.GetPrefetchPathElement("User1", CommonEntityBase.CreateEntityCollection<UserEntity>()); } }

		/// <summary>The CreatedByUserId property of the Entity EntityType<br/><br/></summary>
		/// <remarks>Mapped on  table field: "EntityType"."CreatedByUserId".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Int32> CreatedByUserId
		{
			get { return (Nullable<System.Int32>)GetValue((int)EntityTypeFieldIndex.CreatedByUserId, false); }
			set	{ SetValue((int)EntityTypeFieldIndex.CreatedByUserId, value); }
		}

		/// <summary>The DateCreatedUtc property of the Entity EntityType<br/><br/></summary>
		/// <remarks>Mapped on  table field: "EntityType"."DateCreatedUtc".<br/>Table field type characteristics (type, precision, scale, length): DateTime, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.DateTime DateCreatedUtc
		{
			get { return (System.DateTime)GetValue((int)EntityTypeFieldIndex.DateCreatedUtc, true); }
			set	{ SetValue((int)EntityTypeFieldIndex.DateCreatedUtc, value); }
		}

		/// <summary>The Id property of the Entity EntityType<br/><br/></summary>
		/// <remarks>Mapped on  table field: "EntityType"."Id".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, true, false</remarks>
		public virtual System.Int32 Id
		{
			get { return (System.Int32)GetValue((int)EntityTypeFieldIndex.Id, true); }
			set	{ SetValue((int)EntityTypeFieldIndex.Id, value); }
		}

		/// <summary>The LastModifiedByUserId property of the Entity EntityType<br/><br/></summary>
		/// <remarks>Mapped on  table field: "EntityType"."LastModifiedByUserId".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Int32> LastModifiedByUserId
		{
			get { return (Nullable<System.Int32>)GetValue((int)EntityTypeFieldIndex.LastModifiedByUserId, false); }
			set	{ SetValue((int)EntityTypeFieldIndex.LastModifiedByUserId, value); }
		}

		/// <summary>The LastModifiedUtc property of the Entity EntityType<br/><br/></summary>
		/// <remarks>Mapped on  table field: "EntityType"."LastModifiedUtc".<br/>Table field type characteristics (type, precision, scale, length): DateTime, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.DateTime> LastModifiedUtc
		{
			get { return (Nullable<System.DateTime>)GetValue((int)EntityTypeFieldIndex.LastModifiedUtc, false); }
			set	{ SetValue((int)EntityTypeFieldIndex.LastModifiedUtc, value); }
		}

		/// <summary>The NameArabic property of the Entity EntityType<br/><br/></summary>
		/// <remarks>Mapped on  table field: "EntityType"."NameArabic".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 200.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.String NameArabic
		{
			get { return (System.String)GetValue((int)EntityTypeFieldIndex.NameArabic, true); }
			set	{ SetValue((int)EntityTypeFieldIndex.NameArabic, value); }
		}

		/// <summary>The NameEnglish property of the Entity EntityType<br/><br/></summary>
		/// <remarks>Mapped on  table field: "EntityType"."NameEnglish".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 200.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String NameEnglish
		{
			get { return (System.String)GetValue((int)EntityTypeFieldIndex.NameEnglish, true); }
			set	{ SetValue((int)EntityTypeFieldIndex.NameEnglish, value); }
		}

		/// <summary>The ObjectStatus property of the Entity EntityType<br/><br/></summary>
		/// <remarks>Mapped on  table field: "EntityType"."ObjectStatus".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Int32 ObjectStatus
		{
			get { return (System.Int32)GetValue((int)EntityTypeFieldIndex.ObjectStatus, true); }
			set	{ SetValue((int)EntityTypeFieldIndex.ObjectStatus, value); }
		}

		/// <summary>Gets the EntityCollection with the related entities of type 'LevelEntityEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(LevelEntityEntity))]
		public virtual EntityCollection<LevelEntityEntity> LevelEntities { get { return GetOrCreateEntityCollection<LevelEntityEntity, LevelEntityEntityFactory>("EntityType", true, false, ref _levelEntities); } }

		/// <summary>Gets / sets related entity of type 'UserEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual UserEntity User
		{
			get { return _user; }
			set { SetSingleRelatedEntityNavigator(value, "User"); }
		}

		/// <summary>Gets / sets related entity of type 'UserEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual UserEntity User1
		{
			get { return _user1; }
			set { SetSingleRelatedEntityNavigator(value, "User1"); }
		}

		// __LLBLGENPRO_USER_CODE_REGION_START CustomEntityCode
		// __LLBLGENPRO_USER_CODE_REGION_END

	}
}

namespace ConTech.Data
{
	public enum EntityTypeFieldIndex
	{
		///<summary>CreatedByUserId. </summary>
		CreatedByUserId,
		///<summary>DateCreatedUtc. </summary>
		DateCreatedUtc,
		///<summary>Id. </summary>
		Id,
		///<summary>LastModifiedByUserId. </summary>
		LastModifiedByUserId,
		///<summary>LastModifiedUtc. </summary>
		LastModifiedUtc,
		///<summary>NameArabic. </summary>
		NameArabic,
		///<summary>NameEnglish. </summary>
		NameEnglish,
		///<summary>ObjectStatus. </summary>
		ObjectStatus,
		/// <summary></summary>
		AmountOfFields
	}
}

namespace ConTech.Data.RelationClasses
{
	/// <summary>Implements the relations factory for the entity: EntityType. </summary>
	public partial class EntityTypeRelations: RelationFactory
	{
		/// <summary>Returns a new IEntityRelation object, between EntityTypeEntity and LevelEntityEntity over the 1:n relation they have, using the relation between the fields: EntityType.Id - LevelEntity.EntityTypeId</summary>
		public virtual IEntityRelation LevelEntityEntityUsingEntityTypeId
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "LevelEntities", true, new[] { EntityTypeFields.Id, LevelEntityFields.EntityTypeId }); }
		}

		/// <summary>Returns a new IEntityRelation object, between EntityTypeEntity and UserEntity over the m:1 relation they have, using the relation between the fields: EntityType.CreatedByUserId - User.Id</summary>
		public virtual IEntityRelation UserEntityUsingCreatedByUserId
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "User", false, new[] { UserFields.Id, EntityTypeFields.CreatedByUserId }); }
		}

		/// <summary>Returns a new IEntityRelation object, between EntityTypeEntity and UserEntity over the m:1 relation they have, using the relation between the fields: EntityType.LastModifiedByUserId - User.Id</summary>
		public virtual IEntityRelation UserEntityUsingLastModifiedByUserId
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "User1", false, new[] { UserFields.Id, EntityTypeFields.LastModifiedByUserId }); }
		}

	}
	
	/// <summary>Static class which is used for providing relationship instances which are re-used internally for syncing</summary>
	internal static class StaticEntityTypeRelations
	{
		internal static readonly IEntityRelation LevelEntityEntityUsingEntityTypeIdStatic = new EntityTypeRelations().LevelEntityEntityUsingEntityTypeId;
		internal static readonly IEntityRelation UserEntityUsingCreatedByUserIdStatic = new EntityTypeRelations().UserEntityUsingCreatedByUserId;
		internal static readonly IEntityRelation UserEntityUsingLastModifiedByUserIdStatic = new EntityTypeRelations().UserEntityUsingLastModifiedByUserId;

		/// <summary>CTor</summary>
		static StaticEntityTypeRelations() { }
	}
}
